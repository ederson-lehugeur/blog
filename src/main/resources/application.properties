# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:mysql://localhost:3306/blog?createDatabaseIfNotExist=true&autoReconnect=true&verifyServerCertificate=false&useSSL=false&requireSSL=false
spring.datasource.username=blog
spring.datasource.password=b858f89bde17

# = Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = false
spring.datasource.validationQuery = SELECT 1

# CONFIGURATION SERVER
server.port = 8082

# HIBERNATE
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

# = Spring Security / Queries for AuthenticationManagerBuilder
spring.queries.users-query=SELECT email, senha, ativo FROM usuario WHERE email=?
spring.queries.roles-query=SELECT u.email, r.role FROM usuario u INNER JOIN usuario_role ur ON(u.id=ur.usuario_id) INNER JOIN role r on(ur.role_id=r.id) WHERE u.email=? AND u.ativo=true AND r.role='ADMIN'
